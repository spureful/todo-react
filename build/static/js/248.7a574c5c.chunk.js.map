{"version":3,"file":"static/js/248.7a574c5c.chunk.js","mappings":"8GAAe,SAASA,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,ECVT,SAASQ,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GAC3CC,IAAmBG,EAAUA,EAAQC,QAAO,SAAUC,GACpD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,eACjDM,EAAKM,KAAKC,MAAMP,EAAME,GAG7B,OAAOF,EAGM,SAASQ,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAS,MAAQF,UAAUD,GAAKC,UAAUD,GAAK,GACnDA,EAAI,EAAIb,EAAQL,OAAOqB,IAAS,GAAIC,SAAQ,SAAUxB,GACpD,EAAemB,EAAQnB,EAAKuB,EAAOvB,OAChCE,OAAOuB,0BAA4BvB,OAAOwB,iBAAiBP,EAAQjB,OAAOuB,0BAA0BF,IAAWhB,EAAQL,OAAOqB,IAASC,SAAQ,SAAUxB,GAC5JE,OAAOC,eAAegB,EAAQnB,EAAKE,OAAOa,yBAAyBQ,EAAQvB,OAI/E,OAAOmB,E,4ECUT,MApBA,YAA6B,IAAXQ,EAAU,EAAVA,QACVC,EAZR,WAAsC,IAApBC,EAAmB,uDAAJ,GAC/B,GAA0BC,EAAAA,EAAAA,UAASD,GAAnC,eAAO5B,EAAP,KAAc8B,EAAd,KACA,MAAO,CACLC,IAAK,CACH/B,MAAAA,EACAgC,SAAU,SAAAC,GAAC,OAAIH,EAASG,EAAEf,OAAOlB,SAEnCkC,WAAY,kBAAMJ,EAAS,KAC3B9B,MAAO,kBAAMA,IAIDmC,GASd,OACE,kBAAMC,SARR,SAAoBH,GAClBA,EAAEI,iBACCV,EAAM3B,QAAQsC,SACfZ,EAAQC,EAAM3B,SACf2B,EAAMO,eAIP,WACE,oBAAOK,YAAY,6EAAoBZ,EAAMI,OAC7C,mBAAQS,KAAK,SAAb","sources":["../javascript/esm|F:/WEB/для опробования чего-то/react-first/react-first/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../javascript/esm|F:/WEB/для опробования чего-то/react-first/react-first/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/AddToDo.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction useInput(defaultValue = '') {\r\n  const [value, setValue] = useState(defaultValue)\r\n  return {\r\n    use: {\r\n      value,\r\n      onChange: e => setValue(e.target.value)\r\n    },\r\n    clearValue: () => setValue(''),\r\n    value: () => value\r\n  }   \r\n}\r\nfunction AddToDo({addToDo}) {\r\n  const input = useInput(); \r\n\r\n  function formSubmit(e) {\r\n    e.preventDefault();\r\n    if(input.value().trim()) {\r\n      addToDo(input.value());\r\n     input.clearValue()\r\n    }\r\n  }\r\n  return (\r\n    <form onSubmit={formSubmit}>\r\n      <input placeholder='введите текст' {...input.use}/>\r\n      <button type=\"submit\"> add</button>  \r\n    </form> \r\n  )\r\n}\r\nAddToDo.propTypes = {\r\n  addToDo: PropTypes.func.isRequired\r\n}\r\nexport default AddToDo"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","addToDo","input","defaultValue","useState","setValue","use","onChange","e","clearValue","useInput","onSubmit","preventDefault","trim","placeholder","type"],"sourceRoot":""}